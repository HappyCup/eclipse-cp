package cpjavaparser.values;

import java.util.HashMap;
import java.util.Map;
import java.util.StringTokenizer;

import cpview.ITypeName;

import org.eclipse.jdt.core.dom.ITypeBinding;
import org.eclipse.jdt.core.dom.Name;
import org.eclipse.jdt.core.dom.SimpleName;

public class TypeName implements ITypeName{
	
	private static Map<TypeName, TypeName> typeNames = new HashMap<TypeName, TypeName>();
	
	public static TypeName valueOf(String qualifiedName){
		StringTokenizer tokenizer = new StringTokenizer(qualifiedName, ".", true);
		String packageName = "";
		String simpleName = "";
		String temp = "";
		while (tokenizer.hasMoreTokens())
		{
			packageName = packageName + temp;
			temp = tokenizer.nextToken();
		}
		simpleName = temp;
		TypeName result = new TypeName(packageName, simpleName);
		return getInstance(result);
	}
	
	public static TypeName valueOf (Name packageName, SimpleName simpleName){
		return getInstance(new TypeName(packageName.getFullyQualifiedName(), simpleName.getIdentifier()));
	}
	
	public static TypeName valueOf(ITypeBinding binding){
		TypeName result = new TypeName(binding.getPackage().getName(), binding.getName());	
		return getInstance(result);
	}
	
	private static TypeName getInstance(TypeName typeName){
		if (typeNames.get(typeName)==null) {
			typeNames.put(typeName, typeName);
		}else{
			typeName = typeNames.get(typeName);
		}
		return typeName;
	}

	private String _simpleName;
	private String _packageName;
	
	private TypeName(String packageName, String simpleName){
		_packageName = packageName;
		_simpleName = simpleName;
	}
	
	public String getSimpleName(){
		return _simpleName;
	}
	
	public String getQualifiedName(){
		return _packageName+"."+_simpleName;
	}
	
	public String getPackageName(){
		return _packageName;
	}

	@Override
	public int hashCode() {
		return (_packageName+"."+_simpleName).hashCode();
	}

	@Override
	public boolean equals(Object obj) { //generated by Eclipse
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TypeName other = (TypeName) obj;
		if (_packageName == null) {
			if (other._packageName != null)
				return false;
		} else if (!_packageName.equals(other._packageName))
			return false;
		if (_simpleName == null) {
			if (other._simpleName != null)
				return false;
		} else if (!_simpleName.equals(other._simpleName))
			return false;
		return true;
	}
	
	@Override
	public String toString() {
		return getQualifiedName();
	}

}
